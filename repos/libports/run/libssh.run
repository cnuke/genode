assert_spec x86

if {![have_include power_on/qemu]} {
	puts "\n Run script is not supported on this platform. \n"
	exit 0
}

#
# Build
#

set build_components {
	core init
	drivers/timer drivers/nic
	test/libports/libssh
	lib/vfs/lwip
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

set config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>}

append_platform_drv_config

append config {
	<start name="nic_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
	</start>

	<start name="test-libssh" caps="120">
		<resource name="RAM" quantum="16M"/>
		<config>
			<arg value="test-libssh"/>
			<arg value="-u"/>
			<arg value="baron"/>
			<arg value="-p"/>
			<arg value="s3cr3t"/>
			<arg value="10.0.2.2"/>
			<vfs>
				<dir name="dev">
					<log/>
					<inline name="random">0123456789</inline>
				</dir>
				<dir name="socket"> <lwip dhcp="yes"/> </dir>
				<ram/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
		</config>
	</start>}

append config {
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init timer nic_drv
	ld.lib.so libc.lib.so libm.lib.so vfs.lib.so vfs_lwip.lib.so
	libcrypto.lib.so libssh.lib.so zlib.lib.so

	posix.lib.so test-libssh
}

# platform-specific modules
append_platform_drv_boot_modules

build_boot_image $boot_modules


append qemu_args " -nographic -net user -net nic,model=e1000 "

run_genode_until forever

# vi: set ft=tcl :
