assert_spec x86

if {[expr [have_spec linux] || [have_include "power_on/qemu"]]} {
	puts "Run script not supported on this platform."
	exit 0
}

#
# Build
#

set build_components {
	core init
	drivers/timer
	drivers/framebuffer/gfxinit
	test/framebuffer
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components


proc platform_drv_policy {} {

	if ([have_spec x86]) {
		return {
			<policy label_prefix="gfxinit_fb_drv" irq_mode="nomsi">
				<pci class="VGA"/>
			</policy>}
	} else {
		return {}
	}
}


build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>}

append_platform_drv_config

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="gfxinit_fb_drv" caps="200">
		<resource name="RAM" quantum="8M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>

	<start name="test-framebuffer">
		<resource name="RAM" quantum="16M"/>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init timer
	gfxinit_fb_drv ld.lib.so
	test-framebuffer
}

append_platform_drv_boot_modules

build_boot_image $boot_modules

run_genode_until forever
