set build_components {
	core init timer
	drivers/framebuffer
	drivers/nic
	drivers/nvme
	drivers/ps2
	drivers/rtc
	drivers/usb_host
	server/dynamic_rom
	server/event_filter
	server/fs_rom
	server/log_terminal
	server/nitpicker
	server/part_block
	server/report_rom
	server/vfs
	lib/vfs/pipe
	lib/vfs/import
	lib/vfs/rump
	lib/trace/policy/null
	app/pointer
	app/usb_report_filter
	app/top
	virtualbox5
}

source ${genode_dir}/repos/base/run/platform_drv.inc

lappend build_components server/cpu_sampler
lappend build_components lib/cpu_sampler_platform-nova

append_platform_drv_build_components

build $build_components

create_boot_directory


append config {
<config verbose="yes" prio_levels="4">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="VM"/>
		<service name="TRACE"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

<!--
	<start name="top">
		<resource name="RAM" quantum="2M"/>
		<config period_ms="1000" sort_time="ec"/>
		<route>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
-->

	<!-- must be some priority as client, otherwise priority boost XXX -->
<!--
	<start name="cpu_sampler" priority="-2" caps="300">
		<resource name="RAM" quantum="32M"/>
		<provides>
			<service name="CPU"/>
		</provides>
		<config sample_interval_ms="1" sample_duration_s="120">
			<policy label="vbox -> ep" />
			<policy label="vbox -> vbox 3 -> vCPU"/>
			<policy label="vbox -> EMT"/>
		</config>
		<route>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
-->

	<start name="acpi_drv"  priority="-1" caps="350" >
		<binary name="acpi_drv"/>
		<resource name="RAM" quantum="4M"/>
		<route>
			<service name="IO_MEM"> <parent/> </service>
			<service name="LOG">    <parent/> </service>
			<service name="PD">     <parent/> </service>
			<service name="RM">     <parent/> </service>
			<service name="CPU">    <parent/> </service>
			<service name="ROM">    <parent/> </service>
			<service name="Report"> <child name="acpi_report_rom"/> </service>
			<service name="ROM" label="platform_info"> <parent/> </service>
		</route>
	</start>

	<start name="acpi_report_rom"  priority="-1">
		<binary name="report_rom"/>
		<resource name="RAM" quantum="2M"/>
		<provides>
			<service name="ROM" />
			<service name="Report" />
		</provides>
		<config>
			<policy label="smbios_decoder -> smbios_table" report="acpi_drv -> smbios_table"/>
			<policy label="platform_drv -> acpi"           report="acpi_drv -> acpi"/>
		</config>
		<route>
			<service name="LOG"> <parent/> </service>
			<service name="PD">     <parent/> </service>
			<service name="CPU">    <parent/> </service>
			<service name="ROM">    <parent/> </service>
		</route>
	</start>

	<start name="platform_drv"  priority="-1" caps="800" managing_system="yes">
		<binary name="platform_drv"/>
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Platform"/>
			<service name="Acpi"/>
		</provides>
		<route>
			<service name="ROM" label="acpi"> <child name="acpi_report_rom"/> </service>
			<service name="Timer">            <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route><config>
			<policy label_prefix="ps2_drv">       <device name="PS2"/> </policy>
			<policy label_prefix="nic_drv">       <pci class="ETHERNET"/> </policy>
			<policy label_prefix="fb_drv">        <pci class="VGA"/> </policy>
			<policy label_prefix="wifi_drv">      <pci class="WIFI"/> </policy>
			<policy label_prefix="usb_host_drv">  <pci class="USB"/> </policy>
			<policy label_prefix="ahci_drv">      <pci class="AHCI"/> </policy>
			<policy label_prefix="nvme_drv">      <pci class="NVME"/> </policy>
			<policy label_prefix="audio_drv">     <pci class="AUDIO"/> <pci class="HDAUDIO"/> </policy>
			<policy label_prefix="intel_fb_drv">
				<pci class="VGA"/>
				<pci bus="0" device="0" function="0"/>
				<pci class="ISABRIDGE"/>
			</policy>
		</config>
	</start>

	<start name="ps2_drv" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<config/>
		<route>
			<service name="Event"> <child name="event_filter" label="ps2"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="fb_drv" priority="-1" caps="150">
		<binary name="vesa_fb_drv"/>
		<resource name="RAM" quantum="32M"/>
		<config/>
		<route>
			<any-service> <parent /> <any-child /> </any-service>
		</route>
	</start>

	<start name="rtc_drv" priority="-1">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Rtc"/>
		</provides>
		<route>
			<any-service> <parent /> <any-child /> </any-service>
		</route>
	</start>

	<start name="event_filter">
		<resource name="RAM" quantum="1M" />
		<provides>
			<service name="Event" />
		</provides>
		<config>
			<output>
				<merge>
					<input name="ps2"/>
					<input name="usb_hid"/>
				</merge>
			</output>
			<policy label="ps2" input="ps2"/> 
			<policy label="usb_hid" input="usb_hid"/>
		</config>
		<route>
			<service name="Event"> <child name="nitpicker"/> </service>
			<any-service> <parent /> <any-child /> </any-service>
		</route>
	</start>

	<start name="nic_drv" priority="-1">
		<binary name="ipxe_nic_drv"/>
		<resource name="RAM" quantum="8M" />
		<provides>
			<service name="Nic" />
		</provides>
		<route>
			<any-service> <parent /> <any-child /> </any-service>
		</route>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config>
			<policy label="pointer -> hover"                    report="nitpicker -> hover"/>
			<policy label="pointer -> xray"                     report="nitpicker -> xray"/>
			<policy label="cpu_load_display -> trace_subjects"  report="trace_subject_reporter -> trace_subjects"/>

			<policy label="dummy_clipboard_consumer" report="vbox -> clipboard"/>
			<policy label="vbox -> clipboard"        report="dummy_clipboard_producer"/>
		</config>
		<route>
			<any-service> <parent /> <any-child /> </any-service>
		</route>
	</start>

	<start name="nitpicker" priority="-1" caps="150">
		<resource name="RAM" quantum="12M"/>
		<provides>
			<service name="Gui"/> <service name="Capture"/> <service name="Event"/>
		</provides>
		<route>
			<service name="Report"> <child name="report_rom" /> </service>
			<service name="ROM" label="config">
				<child name="dynamic-config" label="nitpicker.config"/> </service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>

	<start name="pointer" priority="-1">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Report"/> </provides>
		<config shapes="yes"/>
		<route>
			<service name="Gui"> <child name="nitpicker"/>  </service>
			<service name="ROM" label="hover"> <child name="report_rom"/> </service>
			<service name="ROM" label="xray"> <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="dynamic-config" priority="-1">
		<binary name="dynamic_rom"/>
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="ROM"/> </provides>
		<config verbose="yes">
			<rom name="capslock">
				<inline>
					<capslock enabled="yes"/>
				</inline>
				<sleep milliseconds="5000"/>
				<inline>
					<capslock enabled="no"/>
				</inline>
				<sleep milliseconds="5000"/>
			</rom>
			<rom name="nitpicker.config">
				<inline description="standard_mode">
					<config>
						<capture/> <event/>
						<report focus="yes" hover="yes" />

						<domain name="pointer"  layer="1" content="client" label="no" origin="pointer" />
						<domain name="cpu_load" layer="2" content="client" label="no" />
						<domain name=""         layer="3" content="client" label="no" focus="click" hover="always"/>

						<policy label_prefix="pointer"          domain="pointer"/>
						<policy label_prefix="cpu_load_display" domain="cpu_load"/>
						<default-policy domain=""/>
					</config>
				</inline>
				<sleep milliseconds="5000000"/>
			</rom>
		</config>
		<route>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent /> </any-service>
		</route>
	</start>

	<start name="log_terminal" priority="-1">
		<resource name="RAM" quantum="2M"/>
		<provides>
			<service name="Terminal"/>
		</provides>
		<route>
			<any-service> <parent /> </any-service>
		</route>
	</start>

	<start name="vbox" priority="-2" caps="800">

		<binary name="virtualbox5-nova" />
		<resource name="RAM" quantum="2600M"/>
		<config ld_verbose="yes"
		        vbox_file="machine_pci.vbox"
		        vm_name="ubuntu_20_04"
		        xhci="no" capslock="NOROM">
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc" pipe="/pipe"/>
			<vfs>
				<rom name="machine_pci.vbox"/>
				<rom name="vbox_pci_latency.iso"/>
				<dir name="dev">
					<log/> <rtc/> <terminal/>
				</dir>
				<dir name="pipe"> <pipe/> </dir>
			</vfs>
		</config>
		<route>
			<!--<service name="CPU"> <child name="cpu_sampler"/> </service>-->

			<service name="Terminal"> <child name="log_terminal"/> </service>
			<service name="Report" label="shape">    <child name="pointer"/></service>
			<service name="Report">                  <child name="report_rom" /></service>
			<service name="ROM" label="usb_devices"> <child name="usb_report_rom" /> </service>
			<service name="ROM" label="clipboard">   <child name="report_rom" /> </service>
			<service name="Report" label="clipboard"> <child name="report_rom" /> </service>
			<!--<service name="ROM" label="capslock">    <child name="dynamic-config"/> </service>-->
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>
</config>}

install_config $config

exec cp [genode_dir]/repos/ports/run/machine_pci.vbox bin/

append boot_modules {
	core timer init top cpu_sampler cpu_sampler_platform.lib.so
	acpi_drv report_rom platform_drv ps2_drv fs_rom rtc_drv log_terminal
	vesa_fb_drv
	event_filter ipxe_nic_drv nitpicker pointer dynamic_rom virtualbox5-nova
	vfs
	vfs_pipe.lib.so vfs_import.lib.so
	libc.lib.so vfs.lib.so libm.lib.so
	libiconv.lib.so stdcxx.lib.so
	qemu-usb.lib.so

	null

	machine_pci.vbox

	vbox_pci_latency.iso
}

# evaluated by the run tool
proc binary_name_cpu_sampler_platform_lib_so { } {
	return "cpu_sampler_platform-nova.lib.so"
}

build_boot_image $boot_modules

run_genode_until forever
